{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collection);\nexport const selectCollectionForPreview = createSelector([selectCollections], collection => collection ? Object.keys(collection).map(key => collection[key]) : []);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collection => collection ? collection[collectionUrlParam] : null));\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collection);","map":{"version":3,"sources":["C:/Users/Home/React/E-commerce/crwn-clothing/client/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collection","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC3C,CAACE,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,UAF8B,CAAxC;AAKP,OAAO,MAAMC,0BAA0B,GAAGP,cAAc,CACpD,CAACK,iBAAD,CADoD,EAEpDC,UAAU,IACNA,UAAU,GAAGE,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,GAAxB,CAA4BC,GAAG,IAAIL,UAAU,CAACK,GAAD,CAA7C,CAAH,GAAyD,EAHnB,CAAjD;AAMP,OAAO,MAAMC,gBAAgB,GAAGX,OAAO,CAAEY,kBAAD,IACpCb,cAAc,CACV,CAACK,iBAAD,CADU,EAEVC,UAAU,IAAKA,UAAU,GAAGA,UAAU,CAACO,kBAAD,CAAb,GAAoC,IAFnD,CADqB,CAAhC;AAMP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACpD,CAACE,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACnD,CAACE,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,UAFoC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collection\r\n);\r\n\r\nexport const selectCollectionForPreview = createSelector(\r\n    [selectCollections],\r\n    collection =>\r\n        collection ? Object.keys(collection).map(key => collection[key]) : []\r\n);\r\n\r\nexport const selectCollection = memoize((collectionUrlParam) =>\r\n    createSelector(\r\n        [selectCollections],\r\n        collection => (collection ? collection[collectionUrlParam] : null)\r\n    ));\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collection\r\n);"]},"metadata":{},"sourceType":"module"}