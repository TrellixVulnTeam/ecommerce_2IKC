{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\React\\\\E-commerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../../pages/collection/collection.component';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToprops = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToprops)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/Home/React/E-commerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverview","CollectionPage","withSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToprops","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,gCAAtE;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;KAAMG,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;MAAMG,yB;;AAEN,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AACAX,IAAAA,0BAA0B;AAC7B;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGL,KAAD,iBACxC,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,oBAA3C;AAAA,aAAoEH;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGL,KAAD,iBAChD,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACI,kBAAvC;AAAA,aAA8DJ;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAhBkC;;AAiBtC;AAED,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEb,0BADuB;AAE7Cc,EAAAA,kBAAkB,EAAEb;AAFyB,CAAD,CAAhD;;AAKA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\r\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\r\n\r\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../../pages/collection/collection.component';\r\n\r\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionFetching, isCollectionLoaded } = this.props;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} render={(props) =>\r\n                    <CollectionsOverviewWithSpinner isLoading={isCollectionFetching}{...props} />} />\r\n                <Route path={`${match.path}/:collectionId`} render={(props) =>\r\n                    <CollectionPageWithSpinner isLoading={!isCollectionLoaded}{...props} />} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIsCollectionsLoaded\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(ShopPage);"]},"metadata":{},"sourceType":"module"}