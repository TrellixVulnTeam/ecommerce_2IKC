{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\React\\\\E-commerce\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action';\nimport FormInput from '../Form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUP = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmpassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmpassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmpassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I do not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmpassword\",\n        value: confirmpassword,\n        onChange: handleChange,\n        label: \"confirm password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUP, \"81sD74mHiwDtOLPwPyxwIAZ+iww=\");\n\n_c = SignUP;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUP);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUP\");","map":{"version":3,"sources":["C:/Users/Home/React/E-commerce/crwn-clothing/client/src/components/sign-up/sign-up.component.js"],"names":["React","useState","connect","signUpStart","FormInput","CustomButton","SignUP","userCredentials","setCredentials","displayName","email","password","confirmpassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { signUpStart } from '../../redux/user/user.action';\r\n\r\nimport FormInput from '../Form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './sign-up.scss';\r\n\r\nconst SignUP = ({ signUpStart }) => {\r\n    const [userCredentials, setCredentials] = useState({\r\n        displayName: '', email: '', password: '', confirmpassword: ''\r\n    });\r\n\r\n    const { displayName, email, password, confirmpassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (password !== confirmpassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({ displayName, email, password });\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setCredentials({ ...userCredentials, [name]: value });\r\n    }\r\n\r\n    return (\r\n        <div className='sign-up'>\r\n            <h2>I do not have a account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    onChange={handleChange}\r\n                    label='Display Name'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label='Email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label='password'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmpassword'\r\n                    value={confirmpassword}\r\n                    onChange={handleChange}\r\n                    label='confirm password'\r\n                    required\r\n                />\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUP);"]},"metadata":{},"sourceType":"module"}